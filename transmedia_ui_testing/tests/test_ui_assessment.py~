import pytest
import allure
from utils import take_screenshot
from pages.dashboard_page import DashboardPage
from pages.board_page import BoardPage


@pytest.mark.usefixtures("setup", "load_test_data")
class TestEcommerceWebsite:

    @pytest.fixture(scope="class", autouse=True)
    def setup_class(self, request, setup, load_test_data):
        """Class-scoped fixture to initialize shared test data"""
        request.cls.context= setup  # Assign `setup` to `self.context`
        request.cls.page = setup.new_page()  # Assign `setup` to `self.page`
        request.cls.test_data = load_test_data  # Assign `load_test_data` to `self.test_data`
        request.cls.page_instance = DashboardPage(self.page)


    @allure.description("TC001: Navigate to Dashboard")
    @pytest.mark.dependency(name="Navigate_dashboard")
    @pytest.mark.parametrize("environment", ["env"])
    @allure.severity(allure.severity_level.CRITICAL)
    def test_navigate_to_Dashboard(self, environment):
        status = self.page_instance.navigate_to_dashboard(self.test_data[environment]["base_url"])
        take_screenshot(self.page,"Navigated to Dashboard Page")

        assert status, "Navigation to Dashboard Failed"


    @allure.description("TC002: Create new Board")
    @pytest.mark.dependency(name="create_board", depends=["Navigate_dashboard"])
    @pytest.mark.parametrize("testing_data", ["testing_parameters"])
    @allure.severity(allure.severity_level.CRITICAL)
    def test_create_board(self, testing_data):
        try:
            board_name = self.test_data[testing_data]["board_name"]
            status = self.page_instance.create_new_board(board_name)
            assert status, "Failed to create Board"
            take_screenshot(self.page, "Created Board")

            self.page_instance = BoardPage(self.page)

            found_board_name = self.page_instance.get_board_name()
            assert found_board_name == board_name, "Failed to verify created Board"

        except Exception as e:
            take_screenshot(self.page, "Failed to create Board")
            assert False



